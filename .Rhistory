symbols(pos.pNew[, 1][ind.p], pos.pNew[, 2][ind.p],
inches = FALSE, squares = rep(1, length(pos.pNew[,
1][ind.p])), fg = addgrid.col, bg = bg, add = TRUE)
}
}
if (cl.pos != "n") {
colRange <- assign.color(cl.lim2)
ind1 <- which(col == colRange[1])
ind2 <- which(col == colRange[2])
colbar <- col[ind1:ind2]
if (is.null(cl.length))
cl.length <- ifelse(length(colbar) > 20, 11, length(colbar) +
1)
labels <- seq(cl.lim[1], cl.lim[2], length = cl.length)
at <- seq(0, 1, length = length(labels))
if (cl.pos == "r") {
vertical <- TRUE
xlim <- c(m2 + 0.5 + mm * 0.02, m2 + 0.5 + mm * cl.ratio)
ylim <- c(n1 - 0.5, n2 + 0.5)
}
if (cl.pos == "b") {
vertical <- FALSE
xlim <- c(m1 - 0.5, m2 + 0.5)
ylim <- c(n1 - 0.5 - nn * cl.ratio, n1 - 0.5 - nn *
0.02)
}
colorlegend(colbar = colbar, labels = round(labels, 2),
offset = cl.offset, ratio.colbar = 0.3, cex = cl.cex,
xlim = xlim, ylim = ylim, vertical = vertical, align = cl.align.text)
}
if (tl.pos != "n") {
ylabwidth2 <- strwidth(newrownames, cex = tl.cex)
xlabwidth2 <- strwidth(newcolnames, cex = tl.cex)
pos.xlabel <- cbind(m1:m2, n2 + 0.5 + laboffset)
pos.ylabel <- cbind(m1 - 0.5, n2:n1)
if (tl.pos == "td") {
if (type != "upper")
stop("type should be \"upper\" if tl.pos is \"dt\".")
pos.ylabel <- cbind(m1:(m1 + nn) - 0.5, n2:n1)
}
if (tl.pos == "ld") {
if (type != "lower")
stop("type should be \"lower\" if tl.pos is \"ld\".")
pos.xlabel <- cbind(m1:m2, n2:(n2 - mm) + 0.5 + laboffset)
}
if (tl.pos == "d") {
pos.ylabel <- cbind(m1:(m1 + nn) - 0.5, n2:n1)
pos.ylabel <- pos.ylabel[1:min(n, m), ]
symbols(pos.ylabel[, 1] + 0.5, pos.ylabel[, 2], add = TRUE,
bg = bg, fg = addgrid.col, inches = FALSE, squares = rep(1,
length(pos.ylabel[, 1])))
text(pos.ylabel[, 1] + 0.5, pos.ylabel[, 2], newcolnames[1:min(n,
m)], col = tl.col, cex = tl.cex, ...)
}
else {
text(pos.xlabel[, 1], pos.xlabel[, 2], newcolnames,
srt = tl.srt, adj = ifelse(tl.srt == 0, c(0.5,
0), c(0, 0)), col = tl.col, cex = tl.cex, offset = tl.offset,
...)
text(pos.ylabel[, 1], pos.ylabel[, 2], newrownames,
col = tl.col, cex = tl.cex, pos = 2, offset = tl.offset,
...)
}
}
title(title, ...)
if (!is.null(addCoef.col) & (!method == "number")) {
labels <- round((DAT - int) * ifelse(addCoefasPercent, 100, 1)/zoom, ifelse(addCoefasPercent, 0, 2))  # default if addCoef.labels="all"
labels <- as.character(labels)
p.mat <- p.mat[ord, ord]
pNew <- getPos.Dat(p.mat)[[2]]
ind.p <- which(pNew > (sig.level))
if (addCoef.labels == "significant") labels[ ind.p ] = ""
if (addCoef.labels == "insignificant") labels[ -(ind.p)] = ""
if (!is.null(addCoef.outline)) {
shadowtext(Pos[, 1], Pos[, 2], col = addCoef.col, bg = addCoef.outline, cex=addCoef.cex, font=addCoef.font, labels = labels)
} else {
text(Pos[, 1], Pos[, 2], col = addCoef.col, cex=addCoef.cex, font=addCoef.font, labels = labels) # original line
}
}
if (type == "full" & plotCI == "n" & !is.null(addgrid.col))
rect(m1 - 0.5, n1 - 0.5, m2 + 0.5, n2 + 0.5, border = addgrid.col)
if (!is.null(addrect) & order == "hclust" & type == "full") {
corrRect.hclust(corr, k = addrect, method = hclust.method,
col = rect.col, lwd = rect.lwd)
}
invisible(corr)
}
shadowtext <- function(x, y=NULL, labels, col='white', bg='black',
theta= seq(0, 2*pi, length.out=50), r=0.1, ... ) {
xy <- xy.coords(x,y)
xo <- r*strwidth('A')
yo <- r*strheight('A')
# draw background text with small shift in x and y in background colour
for (i in theta) {
text( xy$x + cos(i)*xo, xy$y + sin(i)*yo, labels, col=bg, ... )
}
# draw actual text in exact xy position in foreground colour
text(xy$x, xy$y, labels, col=col, ... )
}
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.8, addCoef.font=2, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
seq(0, 2*pi, length.out=50)
shadowtext <- function(x, y=NULL, labels, col='white', bg='black',
theta= seq(0, 2*pi, length.out=50), r=0.05, ... ) {
xy <- xy.coords(x,y)
xo <- r*strwidth('A')
yo <- r*strheight('A')
# draw background text with small shift in x and y in background colour
for (i in theta) {
text( xy$x + cos(i)*xo, xy$y + sin(i)*yo, labels, col=bg, ... )
}
# draw actual text in exact xy position in foreground colour
text(xy$x, xy$y, labels, col=col, ... )
}
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
shadowtext <- function(x, y=NULL, labels, col='white', bg='black',
theta= seq(0, 2*pi, length.out=50), r=0.08, ... ) {
xy <- xy.coords(x,y)
xo <- r*strwidth('A')
yo <- r*strheight('A')
# draw background text with small shift in x and y in background colour
for (i in theta) {
text( xy$x + cos(i)*xo, xy$y + sin(i)*yo, labels, col=bg, ... )
}
# draw actual text in exact xy position in foreground colour
text(xy$x, xy$y, labels, col=col, ... )
}
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="insignificant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="insignificant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="insignificant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="insignificant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
library(corrplot)
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="#67001F", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="#FFFFFF", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="#FDDBC7", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
corrplot(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
title: "corrplot2 examples"
source("https://raw.githubusercontent.com/dorianps/corrplot2/master/corrplot2.R")
corrplot2(imagingcorr[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = imagingcorr[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=imagingcorr[[4]], plotCI="fullsquare",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations PET-DTI-MRI")
source("https://raw.githubusercontent.com/dorianps/corrplot2/master/corrplot2.R")
rand(1:100, 5)
imaging[[1]]
imagingcor[[1]]
imagingcorr[[1]]
colnames(imagingcorr)
colnames(imagingcorr[[1]])
temp=imagingcorr
apply(expand.grid("Variable_", c(1:11)), 1, paste, collapse="")
colnames(temp[[1]])  =apply(expand.grid("Variable_", c(1:11)), 1, paste, collapse="")
temp[[1]]
colnames(temp[[1]])  =apply(expand.grid("Variable_", c(1:11)), 1, paste, collapse="")
colnames(temp[[1]]) = colnames(temp[[2]])  =colnames(temp[[3]]) =colnames(temp[[4]])  = apply(expand.grid("Variable_", c(1:11)), 1, paste, collapse="")
rownames(temp[[1]]) = rownames(temp[[2]])  =rownames(temp[[3]]) =rownames(temp[[4]])  = apply(expand.grid("Variable_", c(1:11)), 1, paste, collapse="")
temp[[1]]
save(temp, "corrplot2example.Rdata")
save(temp, file="corrplot2example.Rdata")
rm(temp)
load("corrplot2example.Rdata")
getwd()
rm(temp)
load("https://github.com/dorianps/corrplot2/blob/master/corrplot2example.Rdata?raw=true")
con = url("https://github.com/dorianps/corrplot2/blob/master/corrplot2example.Rdata?raw=true")
print(load(con))
close(con)
con = url("https://github.com/dorianps/corrplot2/blob/master/corrplot2example.Rdata?raw=true")
print(load(con))
close(con)
con = url("https://github.com/dorianps/corrplot2/blob/master/corrplot2example.Rdata?raw=true")
print(load(con))
close(con)
corrplot2
library(knitr)
knit2html("MarkdownDocument.Rmd")
getwd()
setwd("C:\Users\DP\Documents\GitHub\corrplot2")
setwd("GitHub/corrplot2")
knit2html("MarkdownDocument.Rmd")
corrplot(temp[[1]],
#order="FPC", hclust.method="average",
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = temp[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
#addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=temp[[4]], plotCI="square",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations Variable 1-11")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
corrplot(temp[[1]],
cl.pos = "r", cl.align = "l", cl.ratio = 0.2, # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black", # position and angle of variable names
low=imagingcorr[[3]], upp=temp[[4]], plotCI="square", # this is to create confidence interval graph
method = "square", outline=1, diag=1, # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0), # margins of the plot
title="Correlations Variable 1-11")
corrplot(temp[[1]],
cl.pos = "r", cl.align = "l", cl.ratio = 0.2, # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black", # position and angle of variable names
#low=imagingcorr[[3]], upp=temp[[4]], plotCI="square", # this is to create confidence interval graph
method = "square", outline=1, diag=1, # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0), # margins of the plot
title="Correlations Variable 1-11")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
corrplot2(temp[[1]],
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = temp[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=temp[[4]], plotCI="square",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations Variable 1-11")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
corrplot2(temp[[1]],
addrect = 3, rect.col = "red", rect.lwd=3,                        # rectangle around clusters if order="hclust"
p.mat = temp[[2]], sig.level = 0.01,                      # insignificant crossouts
insig="pch", pch.col="black",
addCoef.col="black", addCoef.outline="white", addCoefasPercent=T, # add coefficients in plot
addCoef.cex=0.7, addCoef.font=1, addCoef.labels="significant",    # other coefficient settings
col=col2(100),                                                   # the colormap, inverted from original
cl.pos = "r", cl.align = "l", cl.ratio = 0.2,                  # the settings of the legend on the side
tl.pos = "lt", tl.srt=45, tl.cex=0.8, tl.offset=0.5, tl.col="black",   # position and angle of variable names
low=imagingcorr[[3]], upp=temp[[4]], plotCI="square",             # this is to create confidence interval graph
method = "square", outline=1, diag=1,      # method, outline of squares, include or not diagonal
mar = c(0, 0, 1, 0),                        # margins of the plot
#type="lower",
title="Correlations Variable 1-11")
knit2html("MarkdownDocument.Rmd")
knit2pdf("MarkdownDocument.Rmd")
knit2pdf("MarkdownDocument.Rmd")
install.packages(pdflatex)
install.packages("pdflatex")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
knit2html("MarkdownDocument.Rmd")
